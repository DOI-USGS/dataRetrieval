image: artifactory.wma.chs.usgs.gov/docker-official-mirror/rocker/geospatial:latest

include:
  - template: Code-Quality.gitlab-ci.yml

variables:
  _R_CHECK_CRAN_INCOMING_: "false"
  _R_CHECK_FORCE_SUGGESTS_: "true"
  _R_CHECK_DONTTEST_EXAMPLES_: "false"
  CRAN: "https://rpkg.chs.usgs.gov/prod-cran/latest"
  NOT_CRAN: "true"
  PKG_PATH: "$CI_PROJECT_DIR/docs"
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"
  R_LIBS: "$CI_PROJECT_DIR/ci/lib"
  BUILD_LOGS_DIR: "$CI_PROJECT_DIR/ci/logs"
  CONNECT_API_KEY: $CONNECT_API_KEY
  CONNECT_SERVER: $CONNECT_SERVER

stages:
  - getready
  - check
  - test
  - end

getready:
  stage: getready
  script:
    - mkdir -p $R_LIBS_USER
    - Rscript -e "install.packages(c('devtools','pkgdown', 'kableExtra','covr', 'connectapi', 'patchwork', 'rsconnect'))"
    - Rscript -e "devtools::install_deps(dependencies = TRUE, quiet = TRUE)"
  cache:
    paths:
     - $R_LIBS_USER
  artifacts:
    paths:
     - $R_LIBS_USER
     
buildcheck:
  stage: check
  script:
    - mkdir -p $BUILD_LOGS_DIR
    - apt-get update
    - apt-get -o dir::cache::archives=${APT_CACHE} install -y --no-install-recommends qpdf pandoc pandoc-citeproc
    - R CMD build . --no-build-vignettes --no-manual
    - R -e 'devtools::check(document = FALSE, args = "--no-tests", error_on = "error", check_dir = Sys.getenv("BUILD_LOGS_DIR"))'
  artifacts:
    paths:
      - $BUILD_LOGS_DIR

unittests:
  stage: test
  dependencies:
    - getready
    - buildcheck
  script:
    - R -e 'library(testthat); options(testthat.output_file = file.path(Sys.getenv("CI_PROJECT_DIR"), "test-out.xml")); devtools::test(reporter = "junit")'
  artifacts:
    when: always
    paths: 
      - test-out.xml
    reports:
      junit: test-out.xml
        
covertests:
  stage: test
  dependencies:
    - getready
    - buildcheck
  script:
    - R -e 'x <- covr::package_coverage(line_exclusions = list("tests/testthat/test_nldi.R" = c(24:136))); covr::to_cobertura(x); x; '
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml
  coverage: '/Coverage: \d+.\d+\%/'

deploy:
  stage: end
  only: 
    - main
  script:
    - Rscript -e 'pkgdown::build_site()'
    - Rscript -e 'source("deploy_simple.R")'
  artifacts:
    paths:
      - $PKG_PATH
    expire_in: 1 week